import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, D as validate_each_argument, v as validate_slots, e as element, t as text, a as space, c as claim_element, b as children, f as claim_text, g as detach_dev, h as claim_space, k as attr_dev, j as add_location, l as insert_dev, m as append_dev, o as create_component, q as query_selector_all, p as claim_component, r as mount_component, u as transition_in, w as transition_out, x as destroy_component, E as destroy_each, n as noop } from './client.2d97bd04.js';
import { _ as _1_Title } from './1-Title.718093b9.js';
import { p as posts, N as Nav_horizontal } from './posts.db76900e.js';

/* src/routes/blog/index.svelte generated by Svelte v3.28.0 */
const file = "src/routes/blog/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[3] = list[i];
	return child_ctx;
}

// (101:8) {#if post.description}
function create_if_block_1(ctx) {
	let p;
	let t_value = /*shortDescription*/ ctx[2](/*post*/ ctx[3].description) + "";
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, t_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "ph3 post-description svelte-13cxous");
			add_location(p, file, 101, 10, 2041);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(101:8) {#if post.description}",
		ctx
	});

	return block;
}

// (107:8) {#if post.date}
function create_if_block(ctx) {
	let p;
	let t_value = /*dateTransformer*/ ctx[1](/*post*/ ctx[3].date) + "";
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, t_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", " ma1 pb2 pr2 tr f6 gray lh-copy courier");
			add_location(p, file, 107, 10, 2187);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(107:8) {#if post.date}",
		ctx
	});

	return block;
}

// (91:2) {#each postsOrdered as post}
function create_each_block(ctx) {
	let a;
	let div;
	let h1;
	let t0_value = /*post*/ ctx[3].title + "";
	let t0;
	let t1;
	let t2;
	let a_href_value;
	let if_block0 = /*post*/ ctx[3].description && create_if_block_1(ctx);
	let if_block1 = /*post*/ ctx[3].date && create_if_block(ctx);

	const block = {
		c: function create() {
			a = element("a");
			div = element("div");
			h1 = element("h1");
			t0 = text(t0_value);
			t1 = space();
			if (if_block0) if_block0.c();
			t2 = space();
			if (if_block1) if_block1.c();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { rel: true, href: true, class: true });
			var a_nodes = children(a);
			div = claim_element(a_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, t0_value);
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			if (if_block0) if_block0.l(div_nodes);
			t2 = claim_space(div_nodes);
			if (if_block1) if_block1.l(div_nodes);
			div_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "f3 lh-copy courier mb0 ph3 pt3 underline-hover title-card link svelte-13cxous");
			add_location(h1, file, 95, 8, 1876);
			attr_dev(div, "class", " center-m post-card w-60-ns w-80-m w-100 shadow-4 br3 svelte-13cxous");
			add_location(div, file, 93, 6, 1799);
			attr_dev(a, "rel", "prefetch");
			attr_dev(a, "href", a_href_value = `/blog/${/*post*/ ctx[3].permalink}`);
			attr_dev(a, "class", "svelte-13cxous");
			add_location(a, file, 91, 4, 1740);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, div);
			append_dev(div, h1);
			append_dev(h1, t0);
			append_dev(div, t1);
			if (if_block0) if_block0.m(div, null);
			append_dev(div, t2);
			if (if_block1) if_block1.m(div, null);
		},
		p: function update(ctx, dirty) {
			if (/*post*/ ctx[3].description) if_block0.p(ctx, dirty);
			if (/*post*/ ctx[3].date) if_block1.p(ctx, dirty);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(91:2) {#each postsOrdered as post}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let main;
	let title;
	let t1;
	let h2;
	let t2;
	let t3;
	let t4;
	let current;
	title = new _1_Title({ $$inline: true });
	let each_value = /*postsOrdered*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			t0 = space();
			main = element("main");
			create_component(title.$$.fragment);
			t1 = space();
			h2 = element("h2");
			t2 = text("Últimos artículos");
			t3 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t4 = text("\n\n  doctype");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-13a9gc5\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			claim_component(title.$$.fragment, main_nodes);
			t1 = claim_space(main_nodes);
			h2 = claim_element(main_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, "Últimos artículos");
			h2_nodes.forEach(detach_dev);
			t3 = claim_space(main_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(main_nodes);
			}

			t4 = claim_text(main_nodes, "\n\n  doctype");
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Ant Hill | Blog";
			attr_dev(h2, "class", "tl-l tc");
			add_location(h2, file, 88, 2, 1661);
			attr_dev(main, "class", "sections");
			add_location(main, file, 85, 0, 1622);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			mount_component(title, main, null);
			append_dev(main, t1);
			append_dev(main, h2);
			append_dev(h2, t2);
			append_dev(main, t3);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(main, null);
			}

			append_dev(main, t4);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*postsOrdered, dateTransformer, shortDescription*/ 7) {
				each_value = /*postsOrdered*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(main, t4);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(title.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(title.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_component(title);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Blog", slots, []);

	let postsOrdered = posts.sort((a, b) => {
		a = a.date.split("/").reverse().join("");
		b = b.date.split("/").reverse().join("");
		return a < b ? 1 : a > b ? -1 : 0;
	});

	const dateTransformer = inputDate => {
		let arrayDate = inputDate.split("/");
		let reverseDate = arrayDate.reverse();
		let dia = arrayDate[2];

		let mes = arrayDate[1] == 0
		? arrayDate[1].substring(1)
		: arrayDate[1];

		let año = arrayDate[0];

		const arrayMeses = [
			"ene",
			"feb",
			"mar",
			"abr",
			"may",
			"jun",
			"jul",
			"ago",
			"sept",
			"oct",
			"nov",
			"dic"
		];

		return `${dia} ${arrayMeses[mes - 1]}. ${año == new Date().getFullYear() ? "" : año}`;
	};

	const shortDescription = inputDescription => {
		let output = "";

		inputDescription.length > 140
		? output = inputDescription.substring(0, 140) + "..."
		: output = inputDescription;

		return output;
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Blog> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		NavHorizontal: Nav_horizontal,
		posts,
		Title: _1_Title,
		postsOrdered,
		dateTransformer,
		shortDescription
	});

	$$self.$inject_state = $$props => {
		if ("postsOrdered" in $$props) $$invalidate(0, postsOrdered = $$props.postsOrdered);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [postsOrdered, dateTransformer, shortDescription];
}

class Blog extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Blog",
			options,
			id: create_fragment.name
		});
	}
}

export default Blog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguNWI0YzAzNDAuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYmxvZy9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cblx0aW1wb3J0IE5hdkhvcml6b250YWwgZnJvbSAnLi8uLi8uLi9jb21wb25lbnRzL05hdi1ob3Jpem9udGFsLnN2ZWx0ZSc7XG4gIGltcG9ydCB7IHBvc3RzIH0gZnJvbSBcIi4uLy4uL3Bvc3RzXCI7XG4gIGltcG9ydCBUaXRsZSBmcm9tIFwiLi8uLi8uLi9jb21wb25lbnRzLzEtVGl0bGUuc3ZlbHRlXCI7XG4gIFxuXG4gIC8vIE9yZGVyIFBvc3QgYnkgcmVjZW50XG4gIGxldCBwb3N0c09yZGVyZWQgPSBwb3N0cy5zb3J0KChhLCBiKSA9PiB7XG4gICAgYSA9IGEuZGF0ZVxuICAgICAgLnNwbGl0KFwiL1wiKVxuICAgICAgLnJldmVyc2UoKVxuICAgICAgLmpvaW4oXCJcIik7XG4gICAgYiA9IGIuZGF0ZVxuICAgICAgLnNwbGl0KFwiL1wiKVxuICAgICAgLnJldmVyc2UoKVxuICAgICAgLmpvaW4oXCJcIik7XG5cbiAgICByZXR1cm4gYSA8IGIgPyAxIDogYSA+IGIgPyAtMSA6IDA7XG4gIH0pO1xuXG4gIGNvbnN0IGRhdGVUcmFuc2Zvcm1lciA9IGlucHV0RGF0ZSA9PiB7XG4gICAgbGV0IGFycmF5RGF0ZSA9IGlucHV0RGF0ZS5zcGxpdChcIi9cIik7XG4gICAgbGV0IHJldmVyc2VEYXRlID0gYXJyYXlEYXRlLnJldmVyc2UoKTtcbiAgICBsZXQgZGlhID0gYXJyYXlEYXRlWzJdO1xuICAgIGxldCBtZXMgPSBhcnJheURhdGVbMV0gPT0gMCA/IGFycmF5RGF0ZVsxXS5zdWJzdHJpbmcoMSkgOiBhcnJheURhdGVbMV07XG4gICAgbGV0IGHDsW8gPSBhcnJheURhdGVbMF07XG5cbiAgICBjb25zdCBhcnJheU1lc2VzID0gW1xuICAgICAgXCJlbmVcIixcbiAgICAgIFwiZmViXCIsXG4gICAgICBcIm1hclwiLFxuICAgICAgXCJhYnJcIixcbiAgICAgIFwibWF5XCIsXG4gICAgICBcImp1blwiLFxuICAgICAgXCJqdWxcIixcbiAgICAgIFwiYWdvXCIsXG4gICAgICBcInNlcHRcIixcbiAgICAgIFwib2N0XCIsXG4gICAgICBcIm5vdlwiLFxuICAgICAgXCJkaWNcIlxuICAgIF07XG4gICAgcmV0dXJuIGAke2RpYX0gJHthcnJheU1lc2VzW21lcyAtIDFdfS4gJHtcbiAgICAgIGHDsW8gPT0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpID8gXCJcIiA6IGHDsW9cbiAgICB9YDtcbiAgfTtcblxuICBjb25zdCBzaG9ydERlc2NyaXB0aW9uID0gaW5wdXREZXNjcmlwdGlvbiA9PiB7XG4gICAgbGV0IG91dHB1dCA9IFwiXCI7XG4gICAgaW5wdXREZXNjcmlwdGlvbi5sZW5ndGggPiAxNDBcbiAgICAgID8gKG91dHB1dCA9IGlucHV0RGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsIDE0MCkgKyBcIi4uLlwiKVxuICAgICAgOiAob3V0cHV0ID0gaW5wdXREZXNjcmlwdGlvbik7XG4gICAgcmV0dXJuIG91dHB1dDtcbiAgfTtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIC5wb3N0LWNhcmQge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIG1pbi1oZWlnaHQ6IDh2aDtcbiAgfVxuXG4gIC50aXRsZS1jYXJkOmhvdmVyIHtcbiAgICBjb2xvcjogI2ZmN2Q4NztcbiAgfVxuXG4gIC50aXRsZS1jYXJkOmZvY3VzIHtcbiAgICBjb2xvcjogI2ZmN2Q4NztcbiAgfVxuXG4gIGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogIzMzMzMzMztcbiAgfVxuXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgICAucG9zdC1kZXNjcmlwdGlvbiB7XG4gICAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgfVxuICB9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT5BbnQgSGlsbCB8IEJsb2c8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPG1haW4gY2xhc3M9XCJzZWN0aW9uc1wiPlxuICA8VGl0bGUgLz5cblxuICA8aDIgY2xhc3M9XCJ0bC1sIHRjXCI+w5psdGltb3MgYXJ0w61jdWxvczwvaDI+XG5cbiAgeyNlYWNoIHBvc3RzT3JkZXJlZCBhcyBwb3N0fVxuICAgIDxhIHJlbD1cInByZWZldGNoXCIgaHJlZj17YC9ibG9nLyR7cG9zdC5wZXJtYWxpbmt9YH0+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCIgY2VudGVyLW0gcG9zdC1jYXJkIHctNjAtbnMgdy04MC1tIHctMTAwIHNoYWRvdy00IGJyM1wiPlxuXG4gICAgICAgIDxoMVxuICAgICAgICAgIGNsYXNzPVwiZjMgbGgtY29weSBjb3VyaWVyIG1iMCBwaDMgcHQzIHVuZGVybGluZS1ob3ZlciB0aXRsZS1jYXJkIGxpbmtcIj5cbiAgICAgICAgICB7cG9zdC50aXRsZX1cbiAgICAgICAgPC9oMT5cblxuICAgICAgICB7I2lmIHBvc3QuZGVzY3JpcHRpb259XG4gICAgICAgICAgPHAgY2xhc3M9XCJwaDMgcG9zdC1kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAge3Nob3J0RGVzY3JpcHRpb24ocG9zdC5kZXNjcmlwdGlvbil9XG4gICAgICAgICAgPC9wPlxuICAgICAgICB7L2lmfVxuXG4gICAgICAgIHsjaWYgcG9zdC5kYXRlfVxuICAgICAgICAgIDxwIGNsYXNzPVwiIG1hMSBwYjIgcHIyIHRyIGY2IGdyYXkgbGgtY29weSBjb3VyaWVyXCI+XG4gICAgICAgICAgICB7ZGF0ZVRyYW5zZm9ybWVyKHBvc3QuZGF0ZSl9XG4gICAgICAgICAgPC9wPlxuICAgICAgICB7L2lmfVxuXG4gICAgICA8L2Rpdj5cbiAgICA8L2E+XG4gIHsvZWFjaH1cblxuICBkb2N0eXBlXG5cbjwvbWFpbj5cblxuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztvQ0FzR2EsR0FBZ0IsYUFBQyxHQUFJLElBQUMsV0FBVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBTWpDLEdBQWUsYUFBQyxHQUFJLElBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFYM0IsR0FBSSxJQUFDLEtBQUs7Ozs7OzBCQUdSLEdBQUksSUFBQyxXQUFXOzBCQU1oQixHQUFJLElBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3REFmZSxHQUFJLElBQUMsU0FBUzs7Ozs7Ozs7Ozs7Ozs7O2dCQVN0QyxHQUFJLElBQUMsV0FBVztnQkFNaEIsR0FBSSxJQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBaEJiLEdBQVk7Ozs7Z0NBQWpCLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQUFDLEdBQVk7Ozs7K0JBQWpCLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBQUosTUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FuRkYsWUFBWSxHQUFHLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7RUFDakMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQ1AsS0FBSyxDQUFDLEdBQUcsRUFDVCxPQUFPLEdBQ1AsSUFBSSxDQUFDLEVBQUU7RUFDVixDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FDUCxLQUFLLENBQUMsR0FBRyxFQUNULE9BQU8sR0FDUCxJQUFJLENBQUMsRUFBRTtTQUVILENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7OztPQUc3QixlQUFlLEdBQUcsU0FBUztNQUMzQixTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHO01BQy9CLFdBQVcsR0FBRyxTQUFTLENBQUMsT0FBTztNQUMvQixHQUFHLEdBQUcsU0FBUyxDQUFDLENBQUM7O01BQ2pCLEdBQUcsR0FBRyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFBRyxTQUFTLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQUksU0FBUyxDQUFDLENBQUM7O01BQ2pFLEdBQUcsR0FBRyxTQUFTLENBQUMsQ0FBQzs7UUFFZixVQUFVO0dBQ2QsS0FBSztHQUNMLEtBQUs7R0FDTCxLQUFLO0dBQ0wsS0FBSztHQUNMLEtBQUs7R0FDTCxLQUFLO0dBQ0wsS0FBSztHQUNMLEtBQUs7R0FDTCxNQUFNO0dBQ04sS0FBSztHQUNMLEtBQUs7R0FDTCxLQUFLOzs7WUFFRyxHQUFHLElBQUksVUFBVSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQ2pDLEdBQUcsUUFBUSxJQUFJLEdBQUcsV0FBVyxLQUFLLEVBQUUsR0FBRyxHQUFHOzs7T0FJeEMsZ0JBQWdCLEdBQUcsZ0JBQWdCO01BQ25DLE1BQU0sR0FBRyxFQUFFOztFQUNmLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxHQUFHO0lBQ3hCLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEdBQUcsSUFBSSxLQUFLO0lBQ25ELE1BQU0sR0FBRyxnQkFBZ0I7O1NBQ3ZCLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
