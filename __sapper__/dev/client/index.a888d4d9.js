import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, z as validate_each_argument, v as validate_slots, e as element, t as text, a as space, c as claim_element, b as children, f as claim_text, g as detach_dev, h as claim_space, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, o as create_component, q as query_selector_all, p as claim_component, r as mount_component, u as transition_in, w as transition_out, x as destroy_component, A as destroy_each, n as noop } from './client.225cf862.js';
import { _ as _1_Title } from './1-Title.1aaf937e.js';

/* src/routes/blog/index.svelte generated by Svelte v3.26.0 */
const file = "src/routes/blog/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

// (123:8) {#if post.description}
function create_if_block_1(ctx) {
	let p;
	let t_value = /*shortDescription*/ ctx[1](/*post*/ ctx[4].description) + "";
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, t_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "ph3");
			add_location(p, file, 123, 10, 2309);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(123:8) {#if post.description}",
		ctx
	});

	return block;
}

// (127:8) {#if post.date}
function create_if_block(ctx) {
	let p;
	let t_value = /*dateTransformer*/ ctx[2](/*post*/ ctx[4].date) + "";
	let t;

	const block = {
		c: function create() {
			p = element("p");
			t = text(t_value);
			this.h();
		},
		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t = claim_text(p_nodes, t_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", " ma1 pb2 pr2 tr f6 gray lh-copy courier");
			add_location(p, file, 127, 10, 2414);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(127:8) {#if post.date}",
		ctx
	});

	return block;
}

// (113:2) {#each postsOrdered as post}
function create_each_block(ctx) {
	let a;
	let div;
	let h2;
	let t0_value = /*post*/ ctx[4].title + "";
	let t0;
	let t1;
	let t2;
	let t3;
	let a_href_value;
	let if_block0 = /*post*/ ctx[4].description && create_if_block_1(ctx);
	let if_block1 = /*post*/ ctx[4].date && create_if_block(ctx);

	const block = {
		c: function create() {
			a = element("a");
			div = element("div");
			h2 = element("h2");
			t0 = text(t0_value);
			t1 = space();
			if (if_block0) if_block0.c();
			t2 = space();
			if (if_block1) if_block1.c();
			t3 = space();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { rel: true, href: true, class: true });
			var a_nodes = children(a);
			div = claim_element(a_nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h2 = claim_element(div_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, t0_value);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			if (if_block0) if_block0.l(div_nodes);
			t2 = claim_space(div_nodes);
			if (if_block1) if_block1.l(div_nodes);
			div_nodes.forEach(detach_dev);
			t3 = claim_space(a_nodes);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "f3 lh-copy courier mb0 ph3 pt3 underline-hover title-card link svelte-1qot8yx");
			add_location(h2, file, 117, 8, 2144);
			attr_dev(div, "class", "post-card w-60 shadow-4 br3 svelte-1qot8yx");
			add_location(div, file, 115, 6, 2093);
			attr_dev(a, "rel", "prefetch");
			attr_dev(a, "href", a_href_value = "blog/" + /*post*/ ctx[4].slug);
			attr_dev(a, "class", "svelte-1qot8yx");
			add_location(a, file, 113, 4, 2043);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, div);
			append_dev(div, h2);
			append_dev(h2, t0);
			append_dev(div, t1);
			if (if_block0) if_block0.m(div, null);
			append_dev(div, t2);
			if (if_block1) if_block1.m(div, null);
			append_dev(a, t3);
		},
		p: function update(ctx, dirty) {
			if (/*post*/ ctx[4].description) if_block0.p(ctx, dirty);
			if (/*post*/ ctx[4].date) if_block1.p(ctx, dirty);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(113:2) {#each postsOrdered as post}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let t0;
	let main;
	let title;
	let t1;
	let h2;
	let t2;
	let t3;
	let current;
	title = new _1_Title({ $$inline: true });
	let each_value = /*postsOrdered*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			t0 = space();
			main = element("main");
			create_component(title.$$.fragment);
			t1 = space();
			h2 = element("h2");
			t2 = text("Últimos artículos");
			t3 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-10h7psl\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			claim_component(title.$$.fragment, main_nodes);
			t1 = claim_space(main_nodes);
			h2 = claim_element(main_nodes, "H2", {});
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, "Últimos artículos");
			h2_nodes.forEach(detach_dev);
			t3 = claim_space(main_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(main_nodes);
			}

			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Blog";
			add_location(h2, file, 110, 2, 1980);
			attr_dev(main, "class", "sections svelte-1qot8yx");
			add_location(main, file, 107, 0, 1941);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			mount_component(title, main, null);
			append_dev(main, t1);
			append_dev(main, h2);
			append_dev(h2, t2);
			append_dev(main, t3);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(main, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*postsOrdered, dateTransformer, shortDescription*/ 7) {
				each_value = /*postsOrdered*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(main, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(title.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(title.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_component(title);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function preload() {
	return this.fetch(`blog.json`).then(r => r.json()).then(posts => {
		return { posts };
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Blog", slots, []);
	let { posts } = $$props;

	let postsOrdered = posts.sort((a, b) => {
		a = a.date.split("/").reverse().join("");
		b = b.date.split("/").reverse().join("");
		return a < b ? 1 : a > b ? -1 : 0;
	});

	const shortDescription = inputDescription => {
		let output = "";

		inputDescription.length > 140
		? output = inputDescription.substring(0, 140) + "..."
		: output = inputDescription;

		return output;
	};

	const dateTransformer = inputDate => {
		let arrayDate = inputDate.split("/");
		let reverseDate = arrayDate.reverse();
		let dia = arrayDate[2];

		let mes = arrayDate[1] == 0
		? arrayDate[1].substring(1)
		: arrayDate[1];

		let año = arrayDate[0];

		const arrayMeses = [
			"ene",
			"feb",
			"mar",
			"abr",
			"may",
			"jun",
			"jul",
			"ago",
			"sept",
			"oct",
			"nov",
			"dic"
		];

		return `${dia} ${arrayMeses[mes - 1]}. ${año == new Date().getFullYear() ? "" : año}`;
	};

	const writable_props = ["posts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Blog> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("posts" in $$props) $$invalidate(3, posts = $$props.posts);
	};

	$$self.$capture_state = () => ({
		preload,
		Title: _1_Title,
		posts,
		postsOrdered,
		shortDescription,
		dateTransformer
	});

	$$self.$inject_state = $$props => {
		if ("posts" in $$props) $$invalidate(3, posts = $$props.posts);
		if ("postsOrdered" in $$props) $$invalidate(0, postsOrdered = $$props.postsOrdered);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [postsOrdered, shortDescription, dateTransformer, posts];
}

class Blog extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { posts: 3 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Blog",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*posts*/ ctx[3] === undefined && !("posts" in props)) {
			console.warn("<Blog> was created without expected prop 'posts'");
		}
	}

	get posts() {
		throw new Error("<Blog>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set posts(value) {
		throw new Error("<Blog>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Blog;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYTg4OGQ0ZDkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYmxvZy9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG4gIGV4cG9ydCBmdW5jdGlvbiBwcmVsb2FkKCkge1xuICAgIHJldHVybiB0aGlzLmZldGNoKGBibG9nLmpzb25gKVxuICAgICAgLnRoZW4ociA9PiByLmpzb24oKSlcbiAgICAgIC50aGVuKHBvc3RzID0+IHtcbiAgICAgICAgcmV0dXJuIHsgcG9zdHMgfTtcbiAgICAgIH0pO1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IFRpdGxlIGZyb20gXCIuLy4uLy4uL2NvbXBvbmVudHMvMS1UaXRsZS5zdmVsdGVcIjtcbiAgZXhwb3J0IGxldCBwb3N0cztcblxuICBsZXQgcG9zdHNPcmRlcmVkID0gcG9zdHMuc29ydCgoYSwgYikgPT4ge1xuICAgIGEgPSBhLmRhdGVcbiAgICAgIC5zcGxpdChcIi9cIilcbiAgICAgIC5yZXZlcnNlKClcbiAgICAgIC5qb2luKFwiXCIpO1xuICAgIGIgPSBiLmRhdGVcbiAgICAgIC5zcGxpdChcIi9cIilcbiAgICAgIC5yZXZlcnNlKClcbiAgICAgIC5qb2luKFwiXCIpO1xuXG4gICAgcmV0dXJuIGEgPCBiID8gMSA6IGEgPiBiID8gLTEgOiAwO1xuICB9KTtcblxuICBjb25zdCBzaG9ydERlc2NyaXB0aW9uID0gaW5wdXREZXNjcmlwdGlvbiA9PiB7XG4gICAgbGV0IG91dHB1dCA9IFwiXCI7XG4gICAgaW5wdXREZXNjcmlwdGlvbi5sZW5ndGggPiAxNDBcbiAgICAgID8gKG91dHB1dCA9IGlucHV0RGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsIDE0MCkgKyBcIi4uLlwiKVxuICAgICAgOiAob3V0cHV0ID0gaW5wdXREZXNjcmlwdGlvbik7XG4gICAgcmV0dXJuIG91dHB1dDtcbiAgfTtcblxuICBjb25zdCBkYXRlVHJhbnNmb3JtZXIgPSBpbnB1dERhdGUgPT4ge1xuICAgIGxldCBhcnJheURhdGUgPSBpbnB1dERhdGUuc3BsaXQoXCIvXCIpO1xuICAgIGxldCByZXZlcnNlRGF0ZSA9IGFycmF5RGF0ZS5yZXZlcnNlKCk7XG4gICAgbGV0IGRpYSA9IGFycmF5RGF0ZVsyXTtcbiAgICBsZXQgbWVzID0gYXJyYXlEYXRlWzFdID09IDAgPyBhcnJheURhdGVbMV0uc3Vic3RyaW5nKDEpIDogYXJyYXlEYXRlWzFdO1xuICAgIGxldCBhw7FvID0gYXJyYXlEYXRlWzBdO1xuXG4gICAgY29uc3QgYXJyYXlNZXNlcyA9IFtcbiAgICAgIFwiZW5lXCIsXG4gICAgICBcImZlYlwiLFxuICAgICAgXCJtYXJcIixcbiAgICAgIFwiYWJyXCIsXG4gICAgICBcIm1heVwiLFxuICAgICAgXCJqdW5cIixcbiAgICAgIFwianVsXCIsXG4gICAgICBcImFnb1wiLFxuICAgICAgXCJzZXB0XCIsXG4gICAgICBcIm9jdFwiLFxuICAgICAgXCJub3ZcIixcbiAgICAgIFwiZGljXCJcbiAgICBdO1xuICAgIHJldHVybiBgJHtkaWF9ICR7YXJyYXlNZXNlc1ttZXMgLSAxXX0uICR7XG4gICAgICBhw7FvID09IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSA/IFwiXCIgOiBhw7FvXG4gICAgfWA7XG4gIH07XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAvKiBTbWFsbCBzY3JlZW5zICovXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuc2VjdGlvbnMge1xuICAgICAgbWFyZ2luLWxlZnQ6IDJyZW07XG4gICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XG4gICAgfVxuICB9XG5cbiAgLyogTGFyZ2Ugc2NyZWVucyAqL1xuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gICAgLnNlY3Rpb25zIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzcmVtO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAycmVtO1xuICAgIH1cbiAgfVxuXG4gIC5zZWN0aW9ucyB7XG4gICAgbWFyZ2luLWxlZnQ6IDNyZW07XG4gICAgbWFyZ2luLXJpZ2h0OiAycmVtO1xuICB9XG5cbiAgLnBvc3QtY2FyZCB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgbWluLWhlaWdodDogOHZoO1xuICB9XG5cbiAgLnRpdGxlLWNhcmQ6aG92ZXIge1xuICAgIGNvbG9yOiAjZmY3ZDg3O1xuICB9XG5cbiAgLnRpdGxlLWNhcmQ6Zm9jdXMge1xuICAgIGNvbG9yOiAjZmY3ZDg3O1xuICB9XG5cbiAgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiAjMzMzMzMzO1xuICB9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT5CbG9nPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxtYWluIGNsYXNzPVwic2VjdGlvbnNcIj5cbiAgPFRpdGxlIC8+XG5cbiAgPGgyPsOabHRpbW9zIGFydMOtY3Vsb3M8L2gyPlxuXG4gIHsjZWFjaCBwb3N0c09yZGVyZWQgYXMgcG9zdH1cbiAgICA8YSByZWw9XCJwcmVmZXRjaFwiIGhyZWY9XCJibG9nL3twb3N0LnNsdWd9XCI+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJwb3N0LWNhcmQgdy02MCBzaGFkb3ctNCBicjNcIj5cblxuICAgICAgICA8aDJcbiAgICAgICAgICBjbGFzcz1cImYzIGxoLWNvcHkgY291cmllciBtYjAgcGgzIHB0MyB1bmRlcmxpbmUtaG92ZXIgdGl0bGUtY2FyZCBsaW5rXCI+XG4gICAgICAgICAge3Bvc3QudGl0bGV9XG4gICAgICAgIDwvaDI+XG5cbiAgICAgICAgeyNpZiBwb3N0LmRlc2NyaXB0aW9ufVxuICAgICAgICAgIDxwIGNsYXNzPVwicGgzXCI+e3Nob3J0RGVzY3JpcHRpb24ocG9zdC5kZXNjcmlwdGlvbil9PC9wPlxuICAgICAgICB7L2lmfVxuXG4gICAgICAgIHsjaWYgcG9zdC5kYXRlfVxuICAgICAgICAgIDxwIGNsYXNzPVwiIG1hMSBwYjIgcHIyIHRyIGY2IGdyYXkgbGgtY29weSBjb3VyaWVyXCI+XG4gICAgICAgICAgICB7ZGF0ZVRyYW5zZm9ybWVyKHBvc3QuZGF0ZSl9XG4gICAgICAgICAgPC9wPlxuICAgICAgICB7L2lmfVxuXG4gICAgICA8L2Rpdj5cbiAgICA8L2E+XG4gIHsvZWFjaH1cblxuPC9tYWluPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztvQ0EySDBCLEdBQWdCLGFBQUMsR0FBSSxJQUFDLFdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQUs5QyxHQUFlLGFBQUMsR0FBSSxJQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBVDNCLEdBQUksSUFBQyxLQUFLOzs7Ozs7MEJBR1IsR0FBSSxJQUFDLFdBQVc7MEJBSWhCLEdBQUksSUFBQyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eURBYlksR0FBSSxJQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Z0JBUzlCLEdBQUksSUFBQyxXQUFXO2dCQUloQixHQUFJLElBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQWRiLEdBQVk7Ozs7Z0NBQWpCLE1BQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7a0NBQUMsR0FBWTs7OzsrQkFBakIsTUFBSTs7Ozs7Ozs7Ozs7Ozs7OztvQ0FBSixNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBL0dVLE9BQU87UUFDZCxJQUFJLENBQUMsS0FBSyxjQUNkLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksSUFDaEIsSUFBSSxDQUFDLEtBQUs7V0FDQSxLQUFLOzs7Ozs7O09BT1QsS0FBSzs7S0FFWixZQUFZLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQztFQUNqQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FDUCxLQUFLLENBQUMsR0FBRyxFQUNULE9BQU8sR0FDUCxJQUFJLENBQUMsRUFBRTtFQUNWLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUNQLEtBQUssQ0FBQyxHQUFHLEVBQ1QsT0FBTyxHQUNQLElBQUksQ0FBQyxFQUFFO1NBRUgsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQzs7O09BRzdCLGdCQUFnQixHQUFHLGdCQUFnQjtNQUNuQyxNQUFNLEdBQUcsRUFBRTs7RUFDZixnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsR0FBRztJQUN4QixNQUFNLEdBQUcsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxHQUFHLElBQUksS0FBSztJQUNuRCxNQUFNLEdBQUcsZ0JBQWdCOztTQUN2QixNQUFNOzs7T0FHVCxlQUFlLEdBQUcsU0FBUztNQUMzQixTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHO01BQy9CLFdBQVcsR0FBRyxTQUFTLENBQUMsT0FBTztNQUMvQixHQUFHLEdBQUcsU0FBUyxDQUFDLENBQUM7O01BQ2pCLEdBQUcsR0FBRyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFBRyxTQUFTLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQUksU0FBUyxDQUFDLENBQUM7O01BQ2pFLEdBQUcsR0FBRyxTQUFTLENBQUMsQ0FBQzs7UUFFZixVQUFVO0dBQ2QsS0FBSztHQUNMLEtBQUs7R0FDTCxLQUFLO0dBQ0wsS0FBSztHQUNMLEtBQUs7R0FDTCxLQUFLO0dBQ0wsS0FBSztHQUNMLEtBQUs7R0FDTCxNQUFNO0dBQ04sS0FBSztHQUNMLEtBQUs7R0FDTCxLQUFLOzs7WUFFRyxHQUFHLElBQUksVUFBVSxDQUFDLEdBQUcsR0FBRyxDQUFDLE1BQ2pDLEdBQUcsUUFBUSxJQUFJLEdBQUcsV0FBVyxLQUFLLEVBQUUsR0FBRyxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
